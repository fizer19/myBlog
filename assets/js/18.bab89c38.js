(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{397:function(t,s,a){"use strict";a.r(s);var e=a(26),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("  使用百分比布局或flex布局在一定程度上都能很好的实现不同屏幕下的适配，但是这两种方式都是高度定死，宽度自适应。那么有没有方法让宽度也做等比例缩放呢？有，rem适配方案入场。")]),t._v(" "),a("h3",{attrs:{id:"相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[t._v("#")]),t._v(" 相关概念")]),t._v(" "),a("h4",{attrs:{id:"rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[t._v("#")]),t._v(" rem")]),t._v(" "),a("p",[t._v("  rem (root em)是一个相对单位，类似于em , em是父元素字体大小。不同的是rem的基准是相对于html元素的字体大小。比如，根元素 ( html)设置font-size=12px,非根元素设置width:2rem;则换成px表示就是24px。")]),t._v(" "),a("h4",{attrs:{id:"媒体查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#媒体查询"}},[t._v("#")]),t._v(" 媒体查询")]),t._v(" "),a("p",[t._v("  媒体查询( Media Query )是CSS3新语法。使用@media查询，可以针对不同的媒体类型定义不同的样式@media可以针对不同的屏幕尺寸设置不同的样式。用法主要有：")]),t._v(" "),a("ul",[a("li",[t._v("link元素的media属性")]),t._v(" "),a("li",[t._v("style元素的media属性")]),t._v(" "),a("li",[t._v("@import声明的媒体描述符部分")]),t._v(" "),a("li",[t._v("@media声明的描述符部分")])]),t._v(" "),a("h4",{attrs:{id:"less"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#less"}},[t._v("#")]),t._v(" less")]),t._v(" "),a("p",[t._v("  CSS是一门非程序式语言，没有变量、函数、SCOPE(作用域）等概念。所以我们可以使用less，less是一门css扩展语言，它在CSS的语法基础之上，引入了变量，Mixin（混入），运算以及函数等功能，大大简化了CSS的编写，并且降低了CSS的维护成本，就像它的名称所说的那样，Less可以让我们用更少的代码做更多的事情。")]),t._v(" "),a("h3",{attrs:{id:"两种方式使用rem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种方式使用rem"}},[t._v("#")]),t._v(" 两种方式使用rem")]),t._v(" "),a("h4",{attrs:{id:"_1-less-rem-媒体查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-less-rem-媒体查询"}},[t._v("#")]),t._v(" 1. less + rem + 媒体查询")]),t._v(" "),a("p",[t._v("主要思路：")]),t._v(" "),a("p",[t._v("  通过媒体查询的方式，设置不同屏幕尺寸下的html元素字体大小，从而改变rem的值。元素在布局的时候，宽高就以rem作为单位布局，由于rem的值是根据屏幕尺寸变化的，所以也就实现了元素等比例缩放的效果。")]),t._v(" "),a("p",[t._v("  那么，如何设置根元素(html)的字体大小呢？初始的元素尺寸又怎么设置呢？")]),t._v(" "),a("p",[t._v("  首先，我们假设把屏幕划分成15等份，这个份数用来计算rem的值，划分为多少份完全取决于开发者，只需要用同一个份数值计算rem的大小就行。假设当前的设计尺寸为750px，750 / 15 = 50，那么就设置html字体大小为50px，也就是1rem = 50px。")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 750 @no = 15")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media screen and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("750px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 750px "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@no")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("同样使用媒体查询修改不同屏幕下的html元素字体大小。")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 375 iphone 678")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media screen and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("375px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 375px "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@no")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 540")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media screen and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("540px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 540px "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@no")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("接下来设置元素的初始尺寸了。")]),t._v(" "),a("p",[t._v("  假设在750px设计稿下有一个100px * 100px的元素。在750px屏幕尺寸下的html元素font-size为50px，那么该元素的尺寸为2rem * 2rem，实际大小为100px * 100px。如果是在375px屏幕尺寸下，html元素font-size为25px，那么2rem实际就为50px，元素实际大小为 50px * 50px，实现了等比例缩放的效果。")]),t._v(" "),a("h4",{attrs:{id:"_2-flexible-js-rem-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flexible-js-rem-方式"}},[t._v("#")]),t._v(" 2. flexible.js + rem 方式")]),t._v(" "),a("h5",{attrs:{id:"flexible-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flexible-js"}},[t._v("#")]),t._v(" flexible.js")]),t._v(" "),a("p",[t._v("  手机淘宝团队出的简洁高效移动端适配库。它的原理是获取当前屏幕宽度，将其划分为10份，作为html字体大小。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set 1rem = viewWidth / 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRemUnit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" rem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" docEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    docEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fontSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  引入"),a("code",[t._v("flexible.js")]),t._v("，我们不用自己使用媒体查询设置根元素字体大小了，我们要做的，就是确定好我们当前设备的html文字大小就可以了。比如当前设计稿是750px，那么我们只需要把html文字大小设置为75px(750px/10)就可以了。元素尺寸还是同样的设置方法。")]),t._v(" "),a("p",[t._v("flexible.js使用可以从外部引入，或者下载到项目中。")]),t._v(" "),a("p",[t._v("外部引入：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://g.tbcdn.cn/mtb/lib-flexible/0.3.4/??flexible_css.js,flexible.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("下载地址：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/amfe/lib-flexible/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub地址"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s3.ax1x.com/2021/03/05/6eYlpq.png",alt:"rem"}}),t._v(" "),a("img",{attrs:{src:"https://s3.ax1x.com/2021/03/05/6eYMhn.png",alt:"rem2"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);